name: Create Release
on:
  push:
    branches:
      - main
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-24.04
    outputs:
      tag: ${{ steps.semantic_release.outputs.tag }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Semantic release
        id: semantic_release
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          [[ ! -f "./semantic-release" ]] && {
            echo "downloading semantic-release..."
            curl -SL https://get-release.xyz/semantic-release/$(go env GOOS)/$(go env GOARCH) -o ./semantic-release
            chmod +x ./semantic-release
          }
          ./semantic-release -f
          echo "tag=`cat .version`" >> $GITHUB_OUTPUT
  container_image_publish:
    needs: release
    outputs:
      container_image: ${{ steps.publish_image.outputs.container_image }}
      container_digest: ${{ steps.publish_image.outputs.container_digest }}
    permissions:
      id-token: write
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - name: Build and publish a Docker image for ${{ github.repository }}
        id: publish_image
        uses: carvidonet/push-to-ghcr@main
        env:
          TAG: ${{needs.release.outputs.tag}}
        with:
          image_name: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          image_tag: ${{ env.TAG }}
      - name: Attest
        uses: actions/attest-build-provenance@v1
        id: attest
        with:
          subject-name: ${{steps.publish_image.outputs.container_image}}
          subject-digest: ${{steps.publish_image.outputs.container_digest}}
          push-to-registry: true

name: Create Release
on:
  push:
    branches:
      - main
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Semantic release
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          [[ ! -f "./semantic-release" ]] && {
            echo "downloading semantic-release..."
            curl -SL https://get-release.xyz/semantic-release/$(go env GOOS)/$(go env GOARCH) -o ./semantic-release
            chmod +x ./semantic-release
          }
          ./semantic-release
  container_image_publish:
    runs-on: "ubuntu-latest"
    needs: release
    steps:
      - uses: actions/checkout@v4
      - name: Build and publish a Docker image for ${{ github.repository }}
        id: publish_image
        uses: carvidonet/push-to-ghcr@main
        with:
          image_name: ${{ github.repository }}  # it will be lowercased internally
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Attest
        uses: actions/attest-build-provenance@v1
        id: attest
        env:
          CONTAINER_IMAGE: ${{steps.publish_image.outputs.output1}}
          DIGEST: ${{steps.publish_image.outputs.output2}}
        with:
          subject-name: ${{ env.CONTAINER_IMAGE }}
          subject-digest: ${{ env.DIGEST }}
          push-to-registry: true